{"version":3,"sources":["auth/Authenticate.js","pages/Login.js","pages/Register.js","utils/RouteWithSubRoutes.js","layouts/Headerlayout.js","layouts/Siderlayout.js","layouts/Breadcumblayout.js","layouts/Footerlayout.js","layouts/Mainlayout.js","pages/Home.js","pages/apps/Dashboard.js","routes.js","pages/apps/Member/index.js","pages/apps/Post/index.js","pages/apps/Like/index.js","pages/apps/User/Profile.js","pages/apps/User/Updateinformation.js","pages/apps/User/Changepassword.js","utils/PrivateRoute.js","pages/Root.js","utils/apolloClient.js","App.js","serviceWorker.js","index.js"],"names":["Auth","isAuthenticated","localStorage","getItem","authenticate","cb","this","setTimeout","logout","Title","Text","Login","_Component","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","setState","spin","form","validateFields","err","values","console","log","client","email","password","mutate","mutation","USER_LOGIN","variables","userInput","then","res","setItem","data","login","token","history","push","catch","errors","graphQLErrors","map","error","message","state","inherits","createClass","key","value","getFieldDecorator","_this$state","react_default","a","createElement","Fragment","row","id","col","xs","span","offset","sm","md","lg","xl","es_form","onSubmit","className","level","Item","valuePropName","initialValue","rules","type","required","input","prefix","icon","style","color","placeholder","es_checkbox","react_router_dom","to","es_button","htmlType","divider","Component","gql","_templateObject","withApollo","create","name","Content","Register","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","onChange","defineProperty","target","layout","assign","wrapperCol","pages_Register","RouteWithSubRoutes","route","react_router","exact","path","render","component","routes","Header","SubMenu","menu","Headerlayout","onLogout","removeItem","me","_this2","query","ME","location","background","position","zIndex","width","boxShadow","mode","float","lineHeight","defaultSelectedKeys","pathname","selectable","title","avatar","src","username","headerRoutes","headerRoute","i","label","toUpperCase","Divider","onClick","Headerlayout_templateObject","withRouter","Sider","Siderlayout","currentRoute","handleClick","theme","overflow","height","left","siderRoutes","siderRoute","React","breadcrumbNameMap","/","/login","/register","/members","/posts","/likes","/profile","/updateinformation","/changepassword","pathSnippets","split","filter","extraBreadcrumbItems","_","index","url","slice","join","endpoint","indexOf","breadcrumb","defaultBreadCrumb","breadcrumbItems","separator","margin","Footer","Footerlayout","textAlign","Main","layouts_Headerlayout","marginTop","layouts_Siderlayout","marginLeft","layouts_Breadcumblayout","Mainlayout_Content","padding","minHeight","children","back_top","layouts_Footerlayout","Home","Mainlayout","utils_RouteWithSubRoutes","Dashboard","columnDefs","headerName","field","checkboxSelection","params","columnApi","getRowGroupColumns","headerCheckboxSelection","defaultColDef","sortable","resizable","rowSelection","rowData","overlayNoRowsTemplate","rowGroupPanelShow","autoGroupColumnDef","cellRenderer","cellRendererParams","checkbox","statusBar","statusPanels","statusPanel","align","onGridReady","gridApi","api","gridColumnApi","USERS","users","sizeColumnsToFit","ag_grid_react_main","animateRows","floatingFilter","onFirstDataRendered","bind","enableRangeSelection","pagination","Dashboard_templateObject","private","vars","@primary-color","match","updateVars","window","less","modifyVars","PrivateRoute","ScreensRoot","utils_PrivateRoute","cache","InMemoryCache","httpLink","HttpLink","uri","errorLink","onError","_ref","networkError","operation","forEach","_ref2","operationName","authLink","setContext","_ref3","headers","objectSpread","authorization","ApolloClient","link","ApolloLink","from","App","react_apollo_esm","Root","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.edf192db.chunk.js","sourcesContent":["const Auth = {\n\tisAuthenticated: localStorage.getItem('access-token') ? true : false,\n\tauthenticate(cb) {\n\t\tthis.isAuthenticated = true\n\t\tsetTimeout(cb, 200)\n\t},\n\tlogout(cb) {\n\t\tthis.isAuthenticated = false\n\t\tsetTimeout(cb, 200)\n\t}\n}\n\nexport default Auth\n","import React, { Component } from 'react'\nimport Auth from '../auth/Authenticate'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport {\n\tRow,\n\tCol,\n\tForm,\n\tTypography,\n\tIcon,\n\tInput,\n\tButton,\n\tCheckbox,\n\tDivider\n} from 'antd'\nimport './Login.scss'\nimport { Link } from 'react-router-dom'\n\nconst { Title, Text } = Typography\n\nexport class Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\temail: 'chin@gmail.com',\n\t\t\tpassword: 'd3f4ultP4ssword!',\n\t\t\tspin: false,\n\t\t\terrors: []\n\t\t}\n\t}\n\tcomponentWillMount() {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tthis.props.history.push('/')\n\t\t}\n\t}\n\thandleSubmit = e => {\n\t\te.preventDefault()\n\t\tthis.setState({ spin: true })\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('Received values of form: ', values)\n\t\t\t}\n\t\t\tconst { client } = this.props\n\t\t\tconst { email, password } = values\n\t\t\tclient\n\t\t\t\t.mutate({\n\t\t\t\t\tmutation: USER_LOGIN,\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tuserInput: {\n\t\t\t\t\t\t\temail,\n\t\t\t\t\t\t\tpassword\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then(res => {\n\t\t\t\t\tAuth.authenticate(() => {\n\t\t\t\t\t\tlocalStorage.setItem('access-token', res.data.login.token)\n\t\t\t\t\t\tthis.props.history.push('/')\n\t\t\t\t\t\tthis.setState({ spin: false })\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t.catch(res => {\n\t\t\t\t\tconsole.log(res)\n\t\t\t\t\tconst errors = res.graphQLErrors.map(error => error.message)\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tspin: false,\n\t\t\t\t\t\terrors\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t})\n\t}\n\trender() {\n\t\tconst { getFieldDecorator } = this.props.form\n\t\tconst { email, password, errors, spin } = this.state\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Row id=\"layout-login\">\n\t\t\t\t\t<Col\n\t\t\t\t\t\txs={{ span: 24, offset: 0 }}\n\t\t\t\t\t\tsm={{ span: 16, offset: 8 }}\n\t\t\t\t\t\tmd={{ span: 14, offset: 10 }}\n\t\t\t\t\t\tlg={{ span: 12, offset: 12 }}\n\t\t\t\t\t\txl={{ span: 7, offset: 17 }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div id=\"components-form-demo-normal-login\">\n\t\t\t\t\t\t\t<Form onSubmit={this.handleSubmit} className=\"login-form\">\n\t\t\t\t\t\t\t\t<div className=\"login-form-header\">\n\t\t\t\t\t\t\t\t\t<Title level={2}>Chnirt</Title>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<Form.Item value=\"sadasdsadas\">\n\t\t\t\t\t\t\t\t\t{getFieldDecorator('email', {\n\t\t\t\t\t\t\t\t\t\tvaluePropName: 'defaultValue',\n\t\t\t\t\t\t\t\t\t\tinitialValue: email,\n\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'email',\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'The input is not valid E-mail!'\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Please input your E-mail!'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Your@email.com\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t{getFieldDecorator('password', {\n\t\t\t\t\t\t\t\t\t\tvaluePropName: 'defaultValue',\n\t\t\t\t\t\t\t\t\t\tinitialValue: password,\n\t\t\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t\t\t\t\t\t\tmessage: 'Please input your Password!'\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t\t\t{getFieldDecorator('remember', {\n\t\t\t\t\t\t\t\t\t\tvaluePropName: 'checked',\n\t\t\t\t\t\t\t\t\t\tinitialValue: true\n\t\t\t\t\t\t\t\t\t})(<Checkbox>Remember me</Checkbox>)}\n\t\t\t\t\t\t\t\t\t<Link to=\"/forgot\" className=\"login-form-forgot\">\n\t\t\t\t\t\t\t\t\t\tForgot password\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"login-form-button\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{spin ? <Icon type=\"loading\" spin /> : <Icon type=\"login\" />}\n\t\t\t\t\t\t\t\t\t\tLog in\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Text>{errors && errors.map(error => error)}</Text>\n\t\t\t\t\t\t\t\t\t<Divider>OR</Divider>\n\t\t\t\t\t\t\t\t\t<Link to=\"/register\">register now!</Link>\n\t\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst USER_LOGIN = gql`\n\tmutation($userInput: LoginUserInput!) {\n\t\tlogin(userInput: $userInput) {\n\t\t\ttoken\n\t\t}\n\t}\n`\n\nexport default withApollo(Form.create({ name: 'normal_login' })(Login))\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n// import apiCaller from '../utils/apiCaller'\nimport { Layout, Form, Input, Icon, Button } from 'antd'\n\nconst { Content } = Layout\nexport class Register extends Component {\n\tstate = {\n\t\temail: 'chin@gmail.com',\n\t\tpassword: '1',\n\t\tmessage: ''\n\t}\n\tonChange = e => {\n\t\tthis.setState({\n\t\t\t[e.target.name]: e.target.value\n\t\t})\n\t}\n\tonSubmit = e => {\n\t\te.preventDefault()\n\t\tthis.props.form.validateFields((err, values) => {\n\t\t\tif (!err) {\n\t\t\t\tconsole.log('Received values of form: ', values)\n\t\t\t\tconst { email, password } = values\n\t\t\t\t// apiCaller(\n\t\t\t\t// \t'post',\n\t\t\t\t// \t'users',\n\t\t\t\t// \t{\n\t\t\t\t// \t\temail: email,\n\t\t\t\t// \t\tpassword: password\n\t\t\t\t// \t},\n\t\t\t\t// \tnull\n\t\t\t\t// )\n\t\t\t\t// \t.then(res => {\n\t\t\t\t// \t\tthis.setState({\n\t\t\t\t// \t\t\tmessage: 'Registration was successful.'\n\t\t\t\t// \t\t})\n\t\t\t\t// \t})\n\t\t\t\t// \t.catch(err => {\n\t\t\t\t// \t\tconst { status } = err.response\n\t\t\t\t// \t\tif (status === 409) {\n\t\t\t\t// \t\t\tthis.setState({ message: 'Email is existed.' })\n\t\t\t\t// \t\t}\n\t\t\t\t// \t})\n\t\t\t}\n\t\t})\n\t}\n\tcomponentWillMount() {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (token) {\n\t\t\tthis.props.history.push('/')\n\t\t}\n\t}\n\trender() {\n\t\tconst { message } = this.state\n\t\tconst { getFieldDecorator } = this.props.form\n\t\tconst formItemLayout = {\n\t\t\t// labelCol: {\n\t\t\t//   xs: { span: 12, offset: 6 },\n\t\t\t//   sm: { span: 8, offset: 6 }\n\t\t\t// },\n\t\t\twrapperCol: {\n\t\t\t\tmd: {\n\t\t\t\t\tspan: 4,\n\t\t\t\t\toffset: 10\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<Content>\n\t\t\t\t\t<Form\n\t\t\t\t\t\t{...formItemLayout}\n\t\t\t\t\t\tonSubmit={this.onSubmit}\n\t\t\t\t\t\tclassName=\"login-form\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t{getFieldDecorator('email', {\n\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t{ required: true, message: 'Please input your username!' }\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tplaceholder=\"email\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t{getFieldDecorator('password', {\n\t\t\t\t\t\t\t\trules: [\n\t\t\t\t\t\t\t\t\t{ required: true, message: 'Please input your Password!' }\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t})(\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tprefix={\n\t\t\t\t\t\t\t\t\t\t<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t<Form.Item>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\t\thtmlType=\"submit\"\n\t\t\t\t\t\t\t\tclassName=\"login-form-button\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\tOr Have an account?<Link to=\"/login\">Log in</Link>\n\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t</Form>\n\t\t\t\t\t{message}\n\t\t\t\t</Content>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nexport default Form.create({ name: 'normal_login' })(Register)\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst RouteWithSubRoutes = route => {\n\treturn (\n\t\t<Route\n\t\t\texact={route.exact}\n\t\t\tpath={route.path}\n\t\t\trender={() => (\n\t\t\t\t// pass the sub-routes down to keep nesting\n\t\t\t\t<route.component routes={route.routes} />\n\t\t\t)}\n\t\t/>\n\t)\n}\n\nexport default RouteWithSubRoutes\n","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Layout, Menu, Icon, Avatar } from 'antd'\nimport { headerRoutes } from '../routes'\nimport Auth from '../auth/Authenticate'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst { Header } = Layout\n\nconst SubMenu = Menu.SubMenu\n\nclass Headerlayout extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tme: {}\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { client } = this.props\n\t\tclient\n\t\t\t.query({ query: ME })\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tme: res.data.me\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t}\n\tonLogout = () => {\n\t\tconst { history } = this.props\n\t\tAuth.logout(() => {\n\t\t\tlocalStorage.removeItem('access-token')\n\t\t\thistory.push('/login')\n\t\t})\n\t}\n\trender() {\n\t\tconst { location } = this.props\n\t\tconst { me } = this.state\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tid=\"components-layout-demo-fixed\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: '#ffff',\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\tzIndex: '1',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tboxShadow: '0px 0px 5px 0px rgba(50, 50, 50, 0.75)'\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"logo\" />\n\t\t\t\t<Menu\n\t\t\t\t\tmode=\"horizontal\"\n\t\t\t\t\tstyle={{ float: 'right', lineHeight: '62px' }}\n\t\t\t\t\tdefaultSelectedKeys={[location.pathname]}\n\t\t\t\t\tselectable={false}\n\t\t\t\t>\n\t\t\t\t\t<SubMenu\n\t\t\t\t\t\tkey=\"sub1\"\n\t\t\t\t\t\ttitle={\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n\t\t\t\t\t\t\t\t<span>{me && me.username}</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{headerRoutes &&\n\t\t\t\t\t\t\theaderRoutes.map((headerRoute, i) => (\n\t\t\t\t\t\t\t\t<Menu.Item key={i}>\n\t\t\t\t\t\t\t\t\t<Link to={headerRoute.path}>\n\t\t\t\t\t\t\t\t\t\t<Icon type={headerRoute.icon} />\n\t\t\t\t\t\t\t\t\t\t{headerRoute.label.toUpperCase()}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t<Menu.Divider />\n\t\t\t\t\t\t<Menu.Item onClick={this.onLogout}>\n\t\t\t\t\t\t\t<Icon type=\"logout\" />\n\t\t\t\t\t\t\tLOG OUT\n\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t</SubMenu>\n\t\t\t\t</Menu>\n\t\t\t</Header>\n\t\t)\n\t}\n}\n\nconst ME = gql`\n\tquery {\n\t\tme {\n\t\t\t_id\n\t\t\temail\n\t\t\tusername\n\t\t\tfirstLetterOfEmail\n\t\t}\n\t}\n`\n\nexport default withApollo(withRouter(Headerlayout))\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Layout, Menu, Icon } from 'antd'\nimport { siderRoutes } from '../routes'\n\nconst { Sider } = Layout\n\nclass Siderlayout extends React.Component {\n\tstate = {\n\t\tcurrentRoute: '/'\n\t}\n\n\thandleClick = e => {\n\t\tconsole.log('click sider: ', e.key)\n\t\tthis.setState({\n\t\t\tcurrentRoute: e.key\n\t\t})\n\t}\n\trender() {\n\t\tconst { location } = this.props\n\t\treturn (\n\t\t\t<Sider\n\t\t\t\ttheme=\"light\"\n\t\t\t\tstyle={{\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\theight: '100vh',\n\t\t\t\t\tposition: 'fixed',\n\t\t\t\t\tleft: 0\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Menu\n\t\t\t\t\tmode=\"inline\"\n\t\t\t\t\tdefaultSelectedKeys={[location.pathname]}\n\t\t\t\t\tonClick={e => this.handleClick(e)}\n\t\t\t\t>\n\t\t\t\t\t{siderRoutes &&\n\t\t\t\t\t\tsiderRoutes.map((siderRoute, i) => (\n\t\t\t\t\t\t\t<Menu.Item key={siderRoute.path}>\n\t\t\t\t\t\t\t\t<Link to={siderRoute.path}>\n\t\t\t\t\t\t\t\t\t<Icon type={siderRoute.icon} />\n\t\t\t\t\t\t\t\t\t{siderRoute.label.toUpperCase()}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Menu.Item>\n\t\t\t\t\t\t))}\n\t\t\t\t</Menu>\n\t\t\t</Sider>\n\t\t)\n\t}\n}\n\nexport default withRouter(Siderlayout)\n","import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { Breadcrumb } from 'antd'\n\nconst breadcrumbNameMap = {\n\t'/': 'dashboard',\n\t'/login': 'login',\n\t'/register': 'register',\n\t'/members': 'members',\n\t'/posts': 'posts',\n\t'/likes': 'likes',\n\t'/profile': 'profile',\n\t'/updateinformation': 'updateinformation',\n\t'/changepassword': 'changepassword'\n}\n\nconst Breadcumblayout = props => {\n\tconst { location } = props\n\tconst pathSnippets = location.pathname.split('/').filter(i => i)\n\n\tconst extraBreadcrumbItems = pathSnippets.map((_, index) => {\n\t\tconst url = `/${pathSnippets.slice(0, index + 1).join('/')}`\n\n\t\tconst endpoint = `${pathSnippets.slice(0, index + 1)}`\n\t\tif (Object.values(breadcrumbNameMap).indexOf(endpoint) > -1) {\n\t\t\treturn (\n\t\t\t\t<Breadcrumb.Item key={url}>\n\t\t\t\t\t{/* <Link to={url}>{breadcrumbNameMap[url].toUpperCase()}</Link> */}\n\t\t\t\t\t{breadcrumbNameMap[url].toUpperCase()}\n\t\t\t\t</Breadcrumb.Item>\n\t\t\t)\n\t\t}\n\t\treturn null\n\t})\n\n\tconst defaultBreadCrumb = [\n\t\t<Breadcrumb.Item key=\"/\">\n\t\t\t{breadcrumbNameMap['/'].toUpperCase()}\n\t\t</Breadcrumb.Item>\n\t]\n\n\tconst breadcrumbItems = [\n\t\t<Breadcrumb.Item key=\"/\">\n\t\t\t<Link to=\"/\">{breadcrumbNameMap['/'].toUpperCase()}</Link>\n\t\t</Breadcrumb.Item>\n\t].concat(extraBreadcrumbItems)\n\n\treturn (\n\t\t<Breadcrumb separator=\">\" style={{ margin: '16px 16px' }}>\n\t\t\t{extraBreadcrumbItems.length > 0 ? breadcrumbItems : defaultBreadCrumb}\n\t\t</Breadcrumb>\n\t)\n}\n\nexport default withRouter(Breadcumblayout)\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst { Footer } = Layout;\nconst Footerlayout = () => {\n\treturn (\n\t\t<Footer style={{ textAlign: 'center' }}>\n\t\t\tAnt Design ©2018 Created by Ant UED\n\t\t</Footer>\n\t);\n};\n\nexport default Footerlayout;\n","import React from 'react'\nimport Headerlayout from './Headerlayout'\nimport Siderlayout from './Siderlayout'\nimport Breadcumblayout from './Breadcumblayout'\nimport Footerlayout from './Footerlayout'\n\nimport { Layout, BackTop } from 'antd'\n\nconst { Content } = Layout\n\nconst Main = props => {\n\treturn (\n\t\t<Layout>\n\t\t\t{/* Header */}\n\t\t\t<Headerlayout />\n\t\t\t{/* Body */}\n\t\t\t<Layout style={{ marginTop: 64 }}>\n\t\t\t\t{/* Sider */}\n\t\t\t\t<Siderlayout />\n\t\t\t\t{/* Content */}\n\t\t\t\t<Layout style={{ marginLeft: 200 }}>\n\t\t\t\t\t{/* Breadcumb */}\n\t\t\t\t\t<Breadcumblayout />\n\t\t\t\t\t{/* Component */}\n\t\t\t\t\t<Content\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmargin: '0px 16px 0 16px',\n\t\t\t\t\t\t\toverflow: 'auto'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\t\t\tminHeight: '81vh'\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{props.children}\n\t\t\t\t\t\t\t<BackTop />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Content>\n\t\t\t\t\t{/* Footer */}\n\t\t\t\t\t<Footerlayout />\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</Layout>\n\t)\n}\n\nexport default Main\n","import React, { Component } from 'react'\nimport RouteWithSubRoutes from '../utils/RouteWithSubRoutes'\nimport Main from '../layouts/Mainlayout'\nimport { Switch, Redirect } from 'react-router-dom'\n\nexport class Home extends Component {\n\trender() {\n\t\tconst { routes } = this.props\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Main>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{routes &&\n\t\t\t\t\t\t\troutes.map((route, i) => (\n\t\t\t\t\t\t\t\t<RouteWithSubRoutes key={i} {...route} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Main>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { withApollo } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { AgGridReact } from 'ag-grid-react'\nexport class Dashboard extends Component {\n\tstate = {\n\t\tcolumnDefs: [\n\t\t\t{\n\t\t\t\theaderName: 'Id',\n\t\t\t\tfield: '_id',\n\t\t\t\tfilter: 'agTextColumnFilter',\n\t\t\t\t// suppressMenu: true,\n\t\t\t\t// enablePivot: true,\n\t\t\t\t// rowGroup: true\n\t\t\t\t// suppressSizeToFit: true,\n\t\t\t\tcheckboxSelection: function(params) {\n\t\t\t\t\treturn params.columnApi.getRowGroupColumns().length === 0\n\t\t\t\t},\n\t\t\t\theaderCheckboxSelection: function(params) {\n\t\t\t\t\treturn params.columnApi.getRowGroupColumns().length === 0\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Email',\n\t\t\t\tfield: 'email',\n\t\t\t\tfilter: 'agTextColumnFilter'\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Username',\n\t\t\t\tfield: 'username',\n\t\t\t\tfilter: 'agTextColumnFilter'\n\t\t\t}\n\t\t],\n\t\tdefaultColDef: {\n\t\t\tsortable: true,\n\t\t\tfilter: true,\n\t\t\tresizable: true\n\t\t},\n\t\trowSelection: 'multiple',\n\t\trowData: null,\n\t\toverlayNoRowsTemplate:\n\t\t\t'<span style=\"padding: 10px; border: 2px solid #444; background: lightgoldenrodyellow;\">This is a custom \\'no rows\\' overlay</span>',\n\t\trowGroupPanelShow: 'always',\n\t\tautoGroupColumnDef: {\n\t\t\theaderName: 'Model',\n\t\t\tfield: 'model',\n\t\t\tcellRenderer: 'agGroupCellRenderer',\n\t\t\tcellRendererParams: {\n\t\t\t\tcheckbox: true\n\t\t\t}\n\t\t},\n\t\tstatusBar: {\n\t\t\tstatusPanels: [\n\t\t\t\t{\n\t\t\t\t\tstatusPanel: 'agTotalRowCountComponent',\n\t\t\t\t\talign: 'left'\n\t\t\t\t},\n\t\t\t\t{ statusPanel: 'agFilteredRowCountComponent' },\n\t\t\t\t{ statusPanel: 'agSelectedRowCountComponent' },\n\t\t\t\t{ statusPanel: 'agAggregationComponent' }\n\t\t\t]\n\t\t}\n\t}\n\tonGridReady = params => {\n\t\tthis.gridApi = params.api\n\t\tthis.gridColumnApi = params.columnApi\n\t\tconst { client } = this.props\n\t\tclient\n\t\t\t.query({ query: USERS })\n\t\t\t.then(res => {\n\t\t\t\tthis.setState({\n\t\t\t\t\trowData: res.data.users\n\t\t\t\t})\n\t\t\t})\n\t\t\t.catch(err => console.log(err))\n\t\t// this.setState({ rowData: [] })\n\t}\n\n\tonFirstDataRendered(params) {\n\t\tparams.api.sizeColumnsToFit()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\tDashboard\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"ag-theme-balham\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\theight: '500px',\n\t\t\t\t\t\twidth: '100%'\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<AgGridReact\n\t\t\t\t\t\tcolumnDefs={this.state.columnDefs}\n\t\t\t\t\t\tdefaultColDef={this.state.defaultColDef}\n\t\t\t\t\t\tanimateRows={true}\n\t\t\t\t\t\trowData={this.state.rowData}\n\t\t\t\t\t\tfloatingFilter={true}\n\t\t\t\t\t\trowSelection={this.state.rowSelection}\n\t\t\t\t\t\t// groupSelectsChildren={true}\n\t\t\t\t\t\t// autoGroupColumnDef={this.state.autoGroupColumnDef}\n\t\t\t\t\t\toverlayNoRowsTemplate={this.state.overlayNoRowsTemplate}\n\t\t\t\t\t\tonGridReady={this.onGridReady}\n\t\t\t\t\t\tonFirstDataRendered={this.onFirstDataRendered.bind(this)}\n\t\t\t\t\t\tenableRangeSelection={true}\n\t\t\t\t\t\tstatusBar={this.state.statusBar}\n\t\t\t\t\t\tpagination={true}\n\t\t\t\t\t\t// debug={true}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n\nconst USERS = gql`\n\tquery {\n\t\tusers {\n\t\t\t_id\n\t\t\tusername\n\t\t\temail\n\t\t\tfirstLetterOfEmail\n\t\t\tchats {\n\t\t\t\t_id\n\t\t\t\tusers {\n\t\t\t\t\t_id\n\t\t\t\t}\n\t\t\t\tmessages {\n\t\t\t\t\t_id\n\t\t\t\t}\n\t\t\t\tlastMessage {\n\t\t\t\t\t_id\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport default withApollo(Dashboard)\n","import Login from './pages/Login'\nimport Register from './pages/Register'\n\n// Application\nimport Home from './pages/Home'\nimport Dashboard from './pages/apps/Dashboard'\n\n// Member\nimport ScreenMember from './pages/apps/Member'\n// Post\nimport ScreenPost from './pages/apps/Post'\n// Like\nimport ScreenLike from './pages/apps/Like'\n// USER\nimport Profile from './pages/apps/User/Profile'\nimport UpdateInformation from './pages/apps/User/Updateinformation'\nimport ChangePassword from './pages/apps/User/Changepassword'\n// import {\n// \tProfile,\n// \tUpdateInformation,\n// \tChangePassword\n// } from './pages/Dashboard/User';\n\nexport const routes = [\n\t{\n\t\tlabel: 'Login',\n\t\tpath: '/login',\n\t\tcomponent: Login\n\t},\n\t{\n\t\tlabel: 'Register',\n\t\tpath: '/register',\n\t\tcomponent: Register\n\t},\n\t{\n\t\tlabel: 'Home',\n\t\tpath: '/',\n\t\tprivate: true,\n\t\tcomponent: Home,\n\t\troutes: [\n\t\t\t{\n\t\t\t\tlabel: 'dashboard',\n\t\t\t\tpath: '/',\n\t\t\t\texact: true,\n\t\t\t\tcomponent: Dashboard\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'members',\n\t\t\t\tpath: '/members',\n\t\t\t\tcomponent: ScreenMember\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'posts',\n\t\t\t\tpath: '/posts',\n\t\t\t\tcomponent: ScreenPost\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'likes',\n\t\t\t\tpath: '/likes',\n\t\t\t\tcomponent: ScreenLike\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'profile',\n\t\t\t\tpath: '/profile',\n\t\t\t\tcomponent: Profile\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'updateinformation',\n\t\t\t\tpath: '/updateinformation',\n\t\t\t\tcomponent: UpdateInformation\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'changepassword',\n\t\t\t\tpath: '/changepassword',\n\t\t\t\tcomponent: ChangePassword\n\t\t\t}\n\t\t]\n\t}\n]\n\nexport const siderRoutes = [\n\t{\n\t\tlabel: 'dashboard',\n\t\ticon: 'dashboard',\n\t\tpath: '/'\n\t},\n\t{\n\t\tlabel: 'members',\n\t\ticon: 'team',\n\t\tpath: '/members'\n\t},\n\t{\n\t\tlabel: 'posts',\n\t\ticon: 'file',\n\t\tpath: '/posts'\n\t},\n\t{\n\t\tlabel: 'likes',\n\t\ticon: 'like',\n\t\tpath: '/likes'\n\t}\n]\n\nexport const headerRoutes = [\n\t{\n\t\tlabel: 'my profile',\n\t\ticon: 'user',\n\t\tpath: '/profile'\n\t},\n\t{\n\t\tlabel: 'update information',\n\t\ticon: 'info-circle',\n\t\tpath: '/updateinformation'\n\t},\n\t{\n\t\tlabel: 'change password',\n\t\ticon: 'key',\n\t\tpath: '/changepassword'\n\t}\n]\n","import React, { Component } from 'react'\nimport { Row, Col, Input, Button } from 'antd'\n\nexport default class index extends Component {\n\tstate = {\n\t\tvars: { '@primary-color': '#dddddd' }\n\t}\n\tonChange = e => {\n\t\tconst color = e.target.value\n\t\tif (color.match(/^#[a-f0-9]{3,6}$/i)) {\n\t\t\tconst vars = this.state.vars\n\t\t\tvars['@primary-color'] = color\n\t\t\tthis.setState({ vars })\n\t\t}\n\t}\n\tupdateVars = () => {\n\t\twindow.less.modifyVars(this.state.vars).then(() => {\n\t\t\tconsole.log('Theme updated successfully')\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\tMembers\n\t\t\t\t<Row>\n\t\t\t\t\t<Col xs={16}>\n\t\t\t\t\t\tPrimary Color: <Input onChange={this.onChange} />\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col xs={24}>\n\t\t\t\t\t\t<Button type=\"primary\" onClick={this.updateVars}>\n\t\t\t\t\t\t\tUpdate Vars\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\n\nconst index = () => {\n\treturn <div>Post Index</div>\n}\n\nexport default index\n","import React from 'react'\n\nconst index = () => {\n\treturn <div>Like Index</div>\n}\n\nexport default index\n","import React from 'react'\n\nconst Profile = () => {\n\treturn <div>Profile Page</div>\n}\n\nexport default Profile\n","import React from 'react'\n\nconst Updateinformation = () => {\n\treturn <div>Update Information Page</div>\n}\n\nexport default Updateinformation\n","import React from 'react'\n\nconst Changepassword = () => {\n\treturn <div>Change Password Page</div>\n}\n\nexport default Changepassword\n","import React from \"react\";\nimport Auth from \"../auth/Authenticate\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = route => (\n  <Route\n    render={() =>\n      Auth.isAuthenticated ? (\n        <route.component routes={route.routes} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nexport default PrivateRoute;\n","import React from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\nimport { routes } from '../routes'\nimport PrivateRoute from '../utils/PrivateRoute'\n\nconst ScreensRoot = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t{routes.map((route, i) =>\n\t\t\t\troute.private ? (\n\t\t\t\t\t<PrivateRoute key={i} {...route} />\n\t\t\t\t) : (\n\t\t\t\t\t<Route key={i} {...route} />\n\t\t\t\t)\n\t\t\t)}\n\t\t\t<Redirect to=\"/login\" />\n\t\t</Switch>\n\t</BrowserRouter>\n)\n\nexport default ScreensRoot\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloLink } from 'apollo-link'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { setContext } from 'apollo-link-context'\n\nconst cache = new InMemoryCache()\n// const httpLink = new HttpLink({ uri: 'http://localhost:7000/graphql' })\nconst httpLink = new HttpLink({\n\turi: 'https://chnirthgraphql.herokuapp.com/graphql'\n})\n\nconst errorLink = new onError(({ graphQLErrors, networkError, operation }) => {\n\tif (graphQLErrors) {\n\t\tgraphQLErrors.forEach(({ message, path }) =>\n\t\t\tconsole.log(`[GraphQL error]: Message: ${message}, Path: ${path}`)\n\t\t)\n\t}\n\tif (networkError) {\n\t\tconsole.log(\n\t\t\t`[Network error ${operation.operationName}]: ${networkError.message}`\n\t\t)\n\t}\n})\n\nconst authLink = setContext((_, { headers }) => {\n\tconst token = localStorage.getItem('access-token')\n\tconst context = token\n\t\t? {\n\t\t\t\theaders: {\n\t\t\t\t\t...headers,\n\t\t\t\t\tauthorization: `Bearer ${token}`\n\t\t\t\t}\n\t\t  }\n\t\t: null\n\treturn context\n})\n\nconst client = new ApolloClient({\n\tcache,\n\tlink: ApolloLink.from([errorLink, authLink, httpLink])\n})\n\nexport default client\n","import React, { Component } from 'react'\nimport './App.scss'\nimport ScreenRoot from './pages/Root'\nimport { ApolloProvider } from 'react-apollo'\nimport client from './utils/apolloClient'\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<ScreenRoot />\n\t\t\t</ApolloProvider>\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css'\nimport 'ag-grid-enterprise'\nimport './index.scss'\n// import './styles/index.less'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}